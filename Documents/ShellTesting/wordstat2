#!/bin/bash
optind=1
divnum=1
char='#'
for x in $@;do		
		if [[ $x == '-c' ]]; then
			cc=1
		fi
		if [[ $x == '-p' ]]; then
			char=${@:$((optind+1)):1}
		fi
		if [[ $x == '-s' ]]; then
			divnum=${@:$((optind+1)):1}
		fi
		if [[ $x == '-r' ]]; then
			rr=${@:$((optind+1)):1}
			rrcheck=1
			
		fi
		optind=$(($optind+1))
done


w_ordify() {
   ( tr ['\t'' '] '\n' < $1 )
}

r_emPunct() {
	if [[ $rrcheck == 1 ]]; then
		( tr -d "$rr" < "$1" )
	else
		( tr -d ",.?!:;()[]\"\'" < "$1" )
	fi
}

h_istoG() {
	while read line 
do
	first=$( echo $line | cut -d' ' -f1 )
	second=$( echo $line | cut -d' ' -f2 )
	for (( c=1; c<=$(( second/divnum )); c++ ))
	do
   		d=$d${char}
	done

	if [[ $cc == '1' ]]; then
		printf "%3s%5s %s\n" $first $second $d
		
				
	else
		printf "%3s %s\n" $first $d
	fi
	
	d=''
done < "$1"

}


tr ['\t'' '] '\n' < $1 | tr -d ",.?!:;()[]\"\'" > interrim.txt

awk '{print length}' interrim.txt | sort -n | uniq -c | sed -e 's/^ *//' | awk '{ for (i=NF; i>1; i--) printf("%s ",$i); printf("%s\n",$1); }' > interrim2.txt


h_istoG interrim2.txt


