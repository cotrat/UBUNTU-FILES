#include "Card.h"

Card::Card(Suit suit, int value): m_suit(suit), m_value(value) {
}

bool Card::operator<(const Card &other) const {
    // compare suits first
    if(getSuit() < other.getSuit()) {
        return true;
    }

    // if suits equal compare by value
    else if(getSuit() == other.getSuit()) {
        if(getValue() < other.getValue()) {
            return true;
        }
    }

    // not a smaller suit or value if this line reached
    return false;
}

bool Card::operator>(const Card &other) const {
    if(getSuit() > other.getSuit()) {
        return true;
    }

    else if(getSuit() == other.getSuit()) {
        if(getValue() > other.getValue()) {
            return true;
        }
    }

    return false;

}

bool Card::operator==(const Card &other) const {
    return getSuit() == other.getSuit() && getValue() == other.getValue();
}

Suit Card::getSuit() const {
    return m_suit;
}

int Card::getValue() const {
    return m_value;
}
