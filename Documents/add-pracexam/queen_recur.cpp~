#include <stdlib.h>
#include <stdio.h>

int solveQueens(int queenIndex, int sz, int * positions) {
    for (int i=0; i<sz; i++) {
        int valid = 1;
        for (int j=0; j<queenIndex; j++) {
            int diff = queenIndex-j;
            if ( 
                    (positions[j]==i)
                ||  (positions[j]+diff == i) 
                ||  (positions[j]-diff == i)
            ) {
                valid = 0;
                break;
            }
        }

        if (valid) {
            positions[queenIndex]=i;
            if (queenIndex < sz-1) {
                // Recursive call
                int res = solveQueens(queenIndex+1, sz, positions);
                if (res) 
                    return 1;
            } else {
                return 1;
            }
        }
    }
    return 0;
}

void printQueens(int sz, int * positions) {
    for (int i=0; i<sz; i++) {
        printf("%c%d ", (char)(i+(int)'A'), positions[i]+1);
    }   
}

void queens(int sz) {
    int * positions = (int *)malloc(sizeof(int)*sz);
    if (solveQueens(0, sz, positions)) {
        printQueens(sz, positions);
    } else {
        printf("No solutions found\n");
    }
    free(positions);
}

int main() {
    queens(24);
    return 0;
}
